{{> header}}
<style>
  /*the container must be positioned relative:*/
  .autocomplete {
    position: relative;
    display: inline-block;
  }




  .autocomplete-items {
    border: 1px solid #d4d4d4;
    border-bottom: none;
    border-top: none;
    z-index: 99;
    /*position the autocomplete items to be the same width as the container:*/
    top: 100%;
    position: absolute;
  }

  .autocomplete-items div {
    padding: 10px;
    cursor: pointer;
    background-color: #fff;
    border-bottom: 1px solid #d4d4d4;
  }

  /*when hovering an item:*/
  .autocomplete-items div:hover {
    background-color: #e9e9e9;
  }

  /*when navigating through the items using the arrow keys:*/
  .autocomplete-active {
    background-color: DodgerBlue !important;
    color: #ffffff;
  }
</style>
{{> dashboardnav}}

<div class="col">
  <div class="container">
    <form method="POST" enctype="multipart/form-data" action="/doupdatebook" onsubmit="return validate()">
      <h3>Actualizar Libro</h3>
      <input readonly class="form-control-plaintext" id="idbook" name="idbook" hidden>
      <div class="form-row">
        <div class="col">
          <div class="form-group">
            <label for="titulo">Título</label>
            <input id="titulo" class="form-control" type="text" name="titulo" placeholder="Título" required>
          </div>
        </div>
        <div class="col">
          <div class="form-group">
            <label for="autor">Autor</label>
            <input id="autor" class="form-control" type="text" name="autor" placeholder="Autor" value="{{book.autor}}"
              required>
          </div>
        </div>
      </div>

      <div class="form-group">
        <label for="descripcion">Descripción</label>
        <textarea id="descripcion" class="form-control" type="text" name="descripcion" placeholder="Descripción"
          required>{{book.descripcion}}</textarea>
      </div>
      <div class="form-row">
        <div class="col">
          <div class="form-group">
            <label for="myinput">Géneros</label>
            <div class="row">
              <div class="col-sm-9">
                <input id="myInput" class="form-control" type="text" name="genero" placeholder="Género">
              </div>
              <div class="col-sm-3">
                <button type="button" class="btn btn-success btn-sm"
                  onclick="agregar('myInput','generos','eliminar','Ingresar al menos uno')">Añadir</button>
              </div>
            </div>
            <div class="row">
              <div class="col-md-auto">
                <input readonly class="form-control-plaintext" id="generos" name="generos" value="Ingresar al menos uno"
                  required>
              </div>
              <div class="col-md-auto">
                <span style="color: tomato;display:none" id="eliminar"
                  onclick="eliminar('generos','eliminar','Ingresar al menos uno')">Eliminar</span>
              </div>
            </div>
          </div>
        </div>
        <div class="col">
          <div class="form-group">
            <label for="categoria">Categoría</label>
            <div class="row">
              <div class="col-sm-9">
                <input id="categoria" class="form-control" type="text" name="categoria" placeholder="Categoría">
              </div>
              <div class="col-sm-3">
                <button type="button" class="btn btn-success btn-sm"
                  onclick="agregar('categoria','categorias','eliminarc','Ingresar al menos una')">Añadir</button>
              </div>
            </div>
            <div class="row">
              <div class="col-md-auto">
                <input readonly class="form-control-plaintext" id="categorias" name="categorias"
                  value="Ingresar al menos una" required>
              </div>
              <div class="col-md-auto">
                <span style="color: tomato;display:none" id="eliminarc"
                  onclick="eliminar('categorias','eliminarc','Ingresar al menos una')">Eliminar</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="form-row">
        <div class="col">
          <div class="form-group">
            <label for="editorial">Editorial</label>
            <input id="editorial" class="form-control" type="text" name="editorial" placeholder="Editorial" required>
          </div>
        </div>
        <div class="col">
          <div class="form-group">
            <label>Formato</label><br>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="checkbox" id="fisico" value="Físico" name="formato[]">
              <label class="form-check-label" for="fisico">Físico</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="checkbox" id="digital" value="Digital" name="formato[]">
              <label class="form-check-label" for="digital">Digital</label>
            </div>
            <div class="form-check form-check-inline">
              <input class="form-check-input" type="checkbox" id="audio" value="Audiolibro" name="formato[]">
              <label class="form-check-label" for="audio">Audiolibro</label>
            </div>
            <small class="form-text text-muted text-left register" id="formatver"><span id="colorf">Marcar al menos
                uno</span></small>
          </div>
          {{!--           <div class="form-group">
            <label for="formato">Formato</label>
            <input id="formato" class="form-control" type="text" name="formato" placeholder="Formato" required>
          </div> --}}
        </div>
      </div>
      <div class="form-row">
        <div class="col">
          <div class="form-group">
            <label for="precio">Precio</label>
            <input id="precio" class="form-control" type="number" name="precio" placeholder="Precio" min="0" step="0.01"
              required value="{{book.precio}}">
          </div>
        </div>
        <div class="col">
          <div class="form-group">
            <label for="stock">Existencias</label>
            <input id="stock" class="form-control" type="number" name="stock" placeholder="Existencias" min="0" step="1"
              required value="{{book.stock}}">
          </div>
        </div>
      </div>

      <div class="form-row">
        <div class="col">
          <div class="form-group">
            <label for="codigo">ISBN</label>
            <input id="codigo" class="form-control" type="text" name="codigo" placeholder="ISBN" min="0" step="0.01"
              required value="{{book.codigo}}">
            <small class="form-text text-muted text-left register" id="codever"></small>
          </div>
        </div>
        <div class="col">
          <div class="form-group">
            <label for="idioma">Idioma</label>
            <select class="form-control" id="idioma" name="idioma" required>
              <option>Español</option>
              <option>Inglés</option>
            </select>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-auto">
          <div class="form-group">
            <label for="exampleFormControlFile1">Portada</label>
            <input name="image" type="file" class="form-control-file" id="exampleFormControlFile1"
              accept="image/png, image/jpeg">
          </div>
        </div >
        <div class="col">
          <div id="imagecontainer">
            <img src="data:image/jpg;base64,{{book.img}}" width="100" height="140" alt="Card image cap">
          </div>
        </div>
      </div>
      <input class="btn btn-success btn-lg" type="submit" value="Guardar Cambios">
    </form>
  </div>
</div>
</div>
</div>
{{> packages}}

<script>
  function validate() {
    if (!(document.getElementById("fisico").checked || document.getElementById("audio").checked || document.getElementById("digital").checked)) {
      document.getElementById("colorf").style.color = "red"
      return false
    }
    if (document.getElementById("generos").value == "Ingresar al menos uno" || document.getElementById("categorias").value == "Ingresar al menos una") {
      if (document.getElementById("generos").value == "Ingresar al menos uno") {
        document.getElementById("generos").style.color = "red"
      }
      if (document.getElementById("categorias").value == "Ingresar al menos una") {
        document.getElementById("categorias").style.color = "red"
      }
      return false
    } else {

      return true
    }
  }
  function agregar(inputID, listID, remove, defaultv) {
    var input = document.getElementById(inputID)
    var generos = document.getElementById(listID)

    if (input.value.length == 0) {
      return
    }
    document.getElementById(remove).style.display = "block"
    if (generos.value == defaultv) {
      generos.value = input.value
      generos.style.color = "#212529"
    } else {
      generos.value = generos.value + ", " + input.value
    }
    input.value = ""

  }
  function eliminar(lista, remove, defaultv) {
    var generos = document.getElementById(lista)
    var index = generos.value.lastIndexOf(',')
    if (index > -1) {
      generos.value = generos.value.substring(0, index)
    } else {
      generos.value = defaultv
      generos.style.color = "red"
      document.getElementById(remove).style.display = "none"
    }

  }
  function autocomplete(inp, arr) {
    /*the autocomplete function takes two arguments,
    the text field element and an array of possible autocompleted values:*/
    var currentFocus;
    /*execute a function when someone writes in the text field:*/
    inp.addEventListener("input", function (e) {
      var a, b, i, val = this.value;
      /*close any already open lists of autocompleted values*/
      closeAllLists();
      if (!val) { return false; }
      currentFocus = -1;
      /*create a DIV element that will contain the items (values):*/
      a = document.createElement("DIV");
      a.setAttribute("id", this.id + "autocomplete-list");
      a.setAttribute("class", "autocomplete-items");
      /*append the DIV element as a child of the autocomplete container:*/
      this.parentNode.appendChild(a);
      /*for each item in the array...*/
      for (i = 0; i < arr.length; i++) {
        /*check if the item starts with the same letters as the text field value:*/
        var temp = arr[i].toUpperCase()
        temp = temp.replace(/Á/g, "A")
        temp = temp.replace(/É/g, "E")
        temp = temp.replace(/Í/g, "I")
        temp = temp.replace(/Ó/g, "O")
        temp = temp.replace(/Ú/g, "U")
        var temp2 = val.toUpperCase()
        temp2 = temp2.replace(/Á/g, "A")
        temp2 = temp2.replace(/É/g, "E")
        temp2 = temp2.replace(/Í/g, "I")
        temp2 = temp2.replace(/Ó/g, "O")
        temp2 = temp2.replace(/Ú/g, "U")

        if (temp2 == temp) {
          inp.value = arr[i]
        }
        if (temp.substr(0, val.length) == temp2) {
          /*create a DIV element for each matching element:*/
          b = document.createElement("DIV");
          /*make the matching letters bold:*/
          b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
          b.innerHTML += arr[i].substr(val.length);
          /*insert a input field that will hold the current array item's value:*/
          b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>";
          /*execute a function when someone clicks on the item value (DIV element):*/
          b.addEventListener("click", function (e) {
            /*insert the value for the autocomplete text field:*/
            inp.value = this.getElementsByTagName("input")[0].value;
            /*close the list of autocompleted values,
            (or any other open lists of autocompleted values:*/
            closeAllLists();
          });
          a.appendChild(b);
        }
      }
      var list = document.getElementById(this.id + "autocomplete-list").hasChildNodes();
      if (!list) {
        document.getElementById(this.id + "autocomplete-list").remove();
      }
    });
    /*execute a function presses a key on the keyboard:*/
    inp.addEventListener("keydown", function (e) {
      var x = document.getElementById(this.id + "autocomplete-list");
      if (x) x = x.getElementsByTagName("div");
      if (e.keyCode == 40) {
        /*If the arrow DOWN key is pressed,
        increase the currentFocus variable:*/
        currentFocus++;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 38) { //up
        /*If the arrow UP key is pressed,
        decrease the currentFocus variable:*/
        currentFocus--;
        /*and and make the current item more visible:*/
        addActive(x);
      } else if (e.keyCode == 13) {
        /*If the ENTER key is pressed, prevent the form from being submitted,*/
        e.preventDefault();
        if (currentFocus > -1) {
          /*and simulate a click on the "active" item:*/
          if (x) x[currentFocus].click();
        }
      }
    });
    function addActive(x) {
      /*a function to classify an item as "active":*/
      if (!x) return false;
      /*start by removing the "active" class on all items:*/
      removeActive(x);
      if (currentFocus >= x.length) currentFocus = 0;
      if (currentFocus < 0) currentFocus = (x.length - 1);
      /*add class "autocomplete-active":*/
      x[currentFocus].classList.add("autocomplete-active");
    }
    function removeActive(x) {
      /*a function to remove the "active" class from all autocomplete items:*/
      for (var i = 0; i < x.length; i++) {
        x[i].classList.remove("autocomplete-active");
      }
    }
    function closeAllLists(elmnt) {
      /*close all autocomplete lists in the document,
      except the one passed as an argument:*/
      var x = document.getElementsByClassName("autocomplete-items");
      for (var i = 0; i < x.length; i++) {
        if (elmnt != x[i] && elmnt != inp) {
          x[i].parentNode.removeChild(x[i]);
        }
      }
    }
    /*execute a function when someone clicks in the document:*/
    document.addEventListener("click", function (e) {
      closeAllLists(e.target);
    });
  }

  /*An array containing all the country names in the world:*/
  var generos = JSON.parse(decodeURI('{{generos}}'));
  var categorias = JSON.parse(decodeURI('{{categorias}}'));
  var libro = JSON.parse(decodeURI('{{libro}}'));
  document.getElementById("titulo").value = libro.titulo
  document.getElementById("editorial").value = libro.editorial
  //document.getElementById("imagecontainer").innerHTML =libro.img? '<img src="data:image/jpg;base64,' + libro.img + '" >':""
  document.getElementById("fisico").checked = libro.formato.includes("Físico") ? true : false;
  document.getElementById("digital").checked = libro.formato.includes("Digital") ? true : false;
  document.getElementById("audio").checked = libro.formato.includes("Audiolibro") ? true : false;
  document.getElementById("generos").value = libro.genero.join(",")
  document.getElementById("categorias").value = libro.categoria.join(",")
  document.getElementById("eliminar").style.display = "block"
  document.getElementById("eliminarc").style.display = "block"
  document.getElementById("idbook").value = libro._id
  //libro.categoria.includes("hola")
  /*initiate the autocomplete function on the "myInput" element, and pass along the countries array as possible autocomplete values:*/
  autocomplete(document.getElementById("myInput"), generos);
  autocomplete(document.getElementById("categoria"), categorias);
  $(document).ready(function () {
    $("#codigo").on('keyup blur', function () {
      $.ajax({
        type: 'GET',
        url: '/isbn',
        data: { codet: document.getElementById("codigo").value },
        dataType: 'json'                              // <-- add this
        //contentType: 'application/json; charset=utf-8' // <-- remove this
      })
        .done(function (result) {
          if (result.exist && document.getElementById("codigo").value != libro.codigo) {
            //  document.getElementById("emailver").innerHTML = '<span style="color: red;">Email ya registrado</span>'
            document.getElementById("codigo").setCustomValidity('Ya existe');
            document.getElementById("codever").innerHTML = '<span style="color: red;">El ISBN ya existe</span>'
          } else {
            // document.getElementById("emailver").innerHTML = '<span style="color: green;">Email disponible</span>'
            document.getElementById("codigo").setCustomValidity('');
            document.getElementById("codever").innerHTML = ''
          }
        })
        .fail(function (xhr, status, error) {
        })
        .always(function (data) {
        });
    });
  });
</script>
{{> footer}}